networks:
  dev:

services:
  db:
    image: postgres
    container_name: postgresql
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: django_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - dev
    env_file: .env

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: django
    volumes:
      - ./backend:/app
      - ./backend/static:/app/static
    environment:
      POSTGRES_NAME: django_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
    networks:
      - dev
    env_file: .env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react
    volumes:
      - ./frontend:/app
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
    depends_on:
      - backend
    networks:
      - dev
    env_file: .env

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - dev
